//----------------------Verification Construction III.1--------------------------------
//---------------------------------for B_t^3--------------------------------------------
t:=3;//You can set different t to verify
// construct codewords in Table I
Bp:=function(j,k,t)
Bs:={};
Bs join:={[2*j,2*k,2*t-2*j-2*k],[2*j+1,2*k+1,2*t-2*k-2*j-2]};
Bs join:={[2*j,2*k+3,2*t-2*k-2*j-3]};
Bs join:={[2*j+1,2*k+4,2*t-2*k-2*j-5]};
Bs join:={[2*(j+1)+1,2*k,2*t-2*k-2*j-3]};
Bs join:={[2*(j+1),2*(k+1),2*t-2*k-2*j-4],[2*(j+1)+1,2*(k+1)+1,2*t-2*k-2*j-6]};
Bs join:={[2*(j+1),2*(k+2)+1,2*t-2*k-2*j-7]};
Bs join:={[2*(j+2),2*k+1,2*t-2*k-2*j-5]};
Bs join:={[2*(j+2)+1,2*(k+1),2*t-2*k-2*j-7]};
Bs join:={[2*(j+2),2*(k+2),2*t-2*k-2*j-8]};
Bs join:={[2*(j+2)+1,2*(k+2)+1,2*t-2*k-2*j-10]};
return Bs;
end function;

//construct code B_t^3 in Construction III.1 (1)
CsB3:=function(t);
B3:={};
if t eq 0 then B3:={[0,0,0]};end if;
if t eq 1 then B3:={[2,0,0],[0,2,0],[0,0,2]};end if;
if t eq 2 then B3:={[0,2,2],[2,0,2],[2,2,0],[4,0,0],[0,4,0],[0,0,4]};end if;
if t ge 3 then 
if t mod 3 eq 0 then 
    for i,j in [0..t] do 
        if i mod 3 eq 0 and j mod 3 eq 0 and i+j eq t then 
              l:=6;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      B3 join:=Bp(j,k,t);
                   end if;
              end for;
            B3 join:={[2*j,2*i-6,6],[2*j+1,2*i-5,4],[2*j,2*i-3,3],[2*j+1,2*i-2,1],[2*j,2*i,0]};
            B3 join:={[2*j+3,2*i-6,3],[2*j+2,2*i-4,2],[2*j+3,2*i-3,0]};
            B3 join:={[2*j+4,2*i-5,1]};
            B3 join:={[2*t,0,0]};
      end if;
    end for;
end if;

if t mod 3 eq 1 then 
    for i,j in [0..t] do 
        if i mod 3 eq 1 and j mod 3 eq 0 and i+j eq t then 
              l:=4;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      B3 join:=Bp(j,k,t);
                   end if;
              end for;
            B3 join:={[2*j,2*i-2,2],[2*j+1,2*i-1,0]};
      end if;
    end for;
end if;

if t mod 3 eq 2 then 
    for i,j in [0..t] do 
        if i mod 3 eq 2 and j mod 3 eq 0 and i+j eq t then 
              l:=5;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      B3 join:=Bp(j,k,t);
                   end if;
              end for;
            B3 join:={[2*j,2*i-4,4],[2*j+1,2*i-3,2],[2*j,2*i-1,1]};
            B3 join:={[2*j+3,2*i-4,1],[2*j+2,2*i-2,0]};
      end if;
    end for;
end if;
end if;
B3p:={};
for x in B3 do 
     s:=1;
     for i in [1..3] do 
         if x[i] le -1 then s:=0;end if;
     end for;
     if s eq 1 then B3p join:={x};end if;
end for;
return B3p;
end function;

// check the minimum distance of B_t^3 
DisCk:=function(B);
ck:=1;
for x,y in B do 
     if x ne y then 
        Ds:={};
         for i in [1..3] do 
              Ds join:={Abs(x[i]-y[i])};
         end for;
        if MAX(Ds) le 1 then ck:=0;break;end if;
     end if;
end for;
return ck;
end function;

B3:=CsB3(t);
if DisCk(B3) eq 1 then print "The code B3 has minimum distance >=2.";end if;

// check the size of B_t^3
B3size:=0;
if t mod 3 eq 0 then 
    B3size:=4*Binomial(t+1,2)/3+t/3+1;
end if;
if t mod 3 eq 1 then 
    B3size:=4*Binomial(t+1,2)/3+t/3+1/3;
end if;
if t mod 3 eq 2 then 
    B3size:=4*Binomial(t+1,2)/3+t/3+1/3;
end if;
if B3size eq #B3 then print "the results about the size in Theorem III.1 are correct.";end if;

//check constant weight
W:={};
for y in B3 do 
     ys:=0;
     for i in [1..3] do 
          ys:=ys+y[i];
     end for;
    W join:={ys};
end for;
if #W eq 1 then print "B3 has constant weight 2t=",Random(W);end if;

//-----------------------------------for A_t^3-------------------------------------
t:=3;//You can set different t to verify
// construct codewords in Table II
Ap:=function(j,k,t)
As:={};
As join:={[2*j,2*k,2*t-2*j-2*k+1],[2*j+1,2*k+1,2*t-2*k-2*j-1]};
As join:={[2*j,2*k+3,2*t-2*k-2*j-2]};
As join:={[2*j+1,2*k+4,2*t-2*k-2*j-4]};
As join:={[2*(j+1)+1,2*k,2*t-2*k-2*j-2]};
As join:={[2*(j+1),2*(k+1),2*t-2*k-2*j-3],[2*(j+1)+1,2*(k+1)+1,2*t-2*k-2*j-5]};
As join:={[2*(j+1),2*(k+2)+1,2*t-2*k-2*j-6]};
As join:={[2*(j+2),2*k+1,2*t-2*k-2*j-4]};
As join:={[2*(j+2)+1,2*(k+1),2*t-2*k-2*j-6]};
As join:={[2*(j+2),2*(k+2),2*t-2*k-2*j-7]};
As join:={[2*(j+2)+1,2*(k+2)+1,2*t-2*k-2*j-9]};
return As;
end function;

//construct code A_t^3 in Construction III.1 (2)
CsA3:=function(t);
A3:={};
if t eq 0 then A3:={[0,0,1]};end if;
if t eq 1 then A3:={[0,3,0],[3,0,0],[0,0,3],[1,1,1]};end if;
if t eq 2 then A3:={[0,0,5],[1,1,3],[0,3,2],[0,5,0],[3,0,2],[2,2,1],[5,0,0]};end if;
if t ge 3 then 
if t mod 3 eq 0 then 
    for i,j in [0..t] do 
        if i mod 3 eq 0 and j mod 3 eq 0 and i+j eq t then 
              l:=6;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      A3 join:=Ap(j,k,t);
                   end if;
              end for;
            A3 join:={[2*j,2*i-6,7],[2*j+1,2*i-5,5],[2*j,2*i-3,4],[2*j+1,2*i-2,2],[2*j,2*i,1]};
            A3 join:={[2*j+3,2*i-6,4],[2*j+2,2*i-4,3],[2*j+3,2*i-3,1],[2*j+2,2*i-1,0]};
            A3 join:={[2*j+4,2*i-5,2],[2*j+5,2*i-4,0]};
      end if;
    end for;
end if;

if t mod 3 eq 1 then 
    for i,j in [0..t] do 
        if i mod 3 eq 1 and j mod 3 eq 0 and i+j eq t then 
              l:=4;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      A3 join:=Ap(j,k,t);
                   end if;
              end for;
            A3 join:={[2*j,2*i-2,3],[2*j+1,2*i-1,1],[2*j,2*i+1,0]};
           A3 join:={[2*j+3,2*i-2,0]};
           A3 join:={[2*t+1,0,0]};
      end if;
    end for;
end if;

if t mod 3 eq 2 then 
    for i,j in [0..t] do 
        if i mod 3 eq 2 and j mod 3 eq 0 and i+j eq t then 
              l:=5;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      A3 join:=Ap(j,k,t);
                   end if;
              end for;
            A3 join:={[2*j,2*i-4,5],[2*j+1,2*i-3,3],[2*j,2*i-1,2],[2*j+1,2*i,0]};
            A3 join:={[2*j+3,2*i-4,2],[2*j+2,2*i-2,1]};
            A3 join:={[2*j+4,2*i-3,0]};
      end if;
    end for;
end if;
end if;
A3p:={};
for x in A3 do 
     s:=1;
     for i in [1..3] do 
         if x[i] le -1 then s:=0;end if;
     end for;
     if s eq 1 then A3p join:={x};end if;
end for;
return A3p;
end function;

// check the minimum distance of A_t^3 
DisCk:=function(A);
ck:=1;
for x,y in A do 
     if x ne y then 
        Ds:={};
         for i in [1..3] do 
              Ds join:={Abs(x[i]-y[i])};
         end for;
        if MAX(Ds) le 1 then ck:=0;print x,y;break;end if;
     end if;
end for;
return ck;
end function;

A3:=CsA3(t);
if DisCk(A3) eq 1 then print "The code A3 has minimum distance >=2.";end if;

// check the size of A_t^3
A3size:=0;
if t mod 3 eq 0 then 
    A3size:=Binomial(t+2,2)+Binomial(t+1,2)/3;
end if;
if t mod 3 eq 1 then 
    A3size:=Binomial(t+2,2)+Binomial(t+1,2)/3+2/3;
end if;
if t mod 3 eq 2 then 
    A3size:=Binomial(t+2,2)+Binomial(t+1,2)/3;
end if;
if A3size eq #A3 then print "the results about the size in Theorem III.1 are correct.";end if;

//check constant weight
W:={};
for y in A3 do 
     ys:=0;
     for i in [1..3] do 
          ys:=ys+y[i];
     end for;
    W join:={ys};
end for;
if #W eq 1 then print "A3 has constant weight 2t+1=",Random(W);end if;


