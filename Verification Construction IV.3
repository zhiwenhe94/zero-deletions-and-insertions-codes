//-----------------------Verification Construction IV.3 for D=2,w=4--------------------
//By executing the following function, we can obtain a $(w+1,2,2t+1)=(5,2,7)$ code $B_t^{w+1}$ with length $w+1$, distance $2$ and constant weight $2t+1$.
D:=2;
w:=4;
//You can set different $t>=1$ to verify
t:=3;
//----------------------------------------for $B_t^5$----------------------------------------------
// construct codewords as defined in Table II
Bp:=function(j,k,t)
Bs:={};
Bs join:={[2*j,2*k,2*t-2*j-2*k+1],[2*j+1,2*k+1,2*t-2*k-2*j-1]};
Bs join:={[2*j,2*k+3,2*t-2*k-2*j-2]};
Bs join:={[2*j+1,2*k+4,2*t-2*k-2*j-4]};
Bs join:={[2*(j+1)+1,2*k,2*t-2*k-2*j-2]};
Bs join:={[2*(j+1),2*(k+1),2*t-2*k-2*j-3],[2*(j+1)+1,2*(k+1)+1,2*t-2*k-2*j-5]};
Bs join:={[2*(j+1),2*(k+2)+1,2*t-2*k-2*j-6]};
Bs join:={[2*(j+2),2*k+1,2*t-2*k-2*j-4]};
Bs join:={[2*(j+2)+1,2*(k+1),2*t-2*k-2*j-6]};
Bs join:={[2*(j+2),2*(k+2),2*t-2*k-2*j-7]};
Bs join:={[2*(j+2)+1,2*(k+2)+1,2*t-2*k-2*j-9]};
return Bs;
end function;

//construct code $B_t^3$ in Construction III.1 (2)
CsB3:=function(t);
B3:={};
if t eq 0 then B3:={[0,0,1]};end if;
if t eq 1 then B3:={[0,3,0],[3,0,0],[0,0,3],[1,1,1]};end if;
if t eq 2 then B3:={[0,0,5],[1,1,3],[0,3,2],[0,5,0],[3,0,2],[2,2,1],[5,0,0]};end if;
if t ge 3 then 
if t mod 3 eq 0 then 
    for i,j in [0..t] do 
        if i mod 3 eq 0 and j mod 3 eq 0 and i+j eq t then 
              l:=6;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      B3 join:=Bp(j,k,t);
                   end if;
              end for;
            B3 join:={[2*j,2*i-6,7],[2*j+1,2*i-5,5],[2*j,2*i-3,4],[2*j+1,2*i-2,2],[2*j,2*i,1]};
            B3 join:={[2*j+3,2*i-6,4],[2*j+2,2*i-4,3],[2*j+3,2*i-3,1],[2*j+2,2*i-1,0]};
            B3 join:={[2*j+4,2*i-5,2],[2*j+5,2*i-4,0]};
      end if;
    end for;
end if;

if t mod 3 eq 1 then 
    for i,j in [0..t] do 
        if i mod 3 eq 1 and j mod 3 eq 0 and i+j eq t then 
              l:=4;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      B3 join:=Bp(j,k,t);
                   end if;
              end for;
            B3 join:={[2*j,2*i-2,3],[2*j+1,2*i-1,1],[2*j,2*i+1,0]};
           B3 join:={[2*j+3,2*i-2,0]};
           B3 join:={[2*t+1,0,0]};
      end if;
    end for;
end if;

if t mod 3 eq 2 then 
    for i,j in [0..t] do 
        if i mod 3 eq 2 and j mod 3 eq 0 and i+j eq t then 
              l:=5;
              for k in [0..i-l] do 
                   if k mod 3 eq 0 then 
                      B3 join:=Bp(j,k,t);
                   end if;
              end for;
            B3 join:={[2*j,2*i-4,5],[2*j+1,2*i-3,3],[2*j,2*i-1,2],[2*j+1,2*i,0]};
            B3 join:={[2*j+3,2*i-4,2],[2*j+2,2*i-2,1]};
            B3 join:={[2*j+4,2*i-3,0]};
      end if;
    end for;
end if;
end if;
B3p:={};
for x in B3 do 
     s:=1;
     for i in [1..3] do 
         if x[i] le -1 then s:=0;end if;
     end for;
     if s eq 1 then B3p join:={x};end if;
end for;
return B3p;
end function;

C2:=function(t);
C2s:={};
for x0,x1 in [0..t] do 
    if x0+x1 eq t then C2s join:={[x0,x1]};end if;
end for;
return C2s;
end function;

CsBt5:=function(t);
Y:={};
for y0,y1 in [0..t] do 
     if y0+y1 eq t then Y join:={[y0,y1]};end if;
end for;

Bt5:={};
for y in Y do 
     B3:=CsB3(y[1]);
     C2s:=C2(y[2]);
     for g1 in B3 do 
          for g2 in C2s do 
               x:=[0,0,0,0,0];
               x[1]:=g1[1];
               x[2]:=g1[2];
               x[3]:=g1[3];
               x[4]:=g2[1]*D;
               x[5]:=g2[2]*D;
               Bt5 join:={x};
         end for;
     end for;
end for;
return Bt5;
end function;

// check the minimum distance of $B_t^5$ $D=2$
MAX:=function(S);
ymax:=Random(S);
for y in S do 
    if y ge ymax then ymax:=y;end if;
end for;
return ymax;
end function;

MIN:=function(S);
ymin:=Random(S);
for y in S do 
    if y le ymin then ymin:=y;end if;
end for;
return ymin;
end function;

DisCk:=function(A);
ck:=1;
Dt:={};
for x,y in A do 
     if x ne y then 
        Ds:={};
         for i in [1..5] do 
              Ds join:={Abs(x[i]-y[i])};
         end for;
        if MAX(Ds) le 1 then ck:=0;print x,y;break;end if;
        Dt join:={MAX(Ds)};
     end if;
end for;
if MIN(Dt) eq 2 then else ck:=0;end if; 
return ck;
end function;


// check the size of $B_t^5$
SizCk:=function(t,Bt5);
Ck:=0;
Bt5size:=0;
if t mod 3 eq 0 then 
     Bt5size:=Bt5size+Binomial(t+w,w)+Binomial(w+t-1,w)/3;
     for i in [0..t] do 
          if i mod 3 eq 0 then 
             Bt5size:=Bt5size+2*Binomial(w-4+i,i-1)/3;
          end if;
     end for;
end if;

if t mod 3 eq 1 then 
     Bt5size:=Bt5size+Binomial(t+w,w)+(Binomial(w+t-1,w))/3;
     for i in [0..t+2] do 
          if i mod 3 eq 0 then 
             Bt5size:=Bt5size+2*Binomial(w-6+i,i-3)/3;
          end if;
     end for;
end if;

if t mod 3 eq 2 then 
     Bt5size:=Bt5size+Binomial(t+w,w)+Binomial(w+t-1,w)/3;
     for i in [0..t+1] do 
          if i mod 3 eq 0 then 
             Bt5size:=Bt5size+2*Binomial(w-5+i,i-2)/3;
          end if;
     end for;
end if;
if Bt5size eq #Bt5 then Ck:=1;end if;
return Ck;
end function;

//check constant weight
WeiCk:=function(Bt5);
W:={};
for y in Bt5 do 
     ys:=0;
     for i in [1..5] do 
          ys:=ys+y[i];
     end for;
    W join:={ys};
end for;
if #W eq 1 then return Random(W);else return 0;end if;
end function;

// Output the information of the code B_t^5
Bt5:=CsBt5(t);
print "the code B_t^5 is:",Bt5;
print "the size of the code B_t^5 is:",#Bt5;
if DisCk(Bt5) eq 1 then print "The code B_t^5 has minimum distance 2.";end if;
if SizCk(t,Bt5) eq 1 then print "the results about the size in Theorem IV.3 are correct.";end if;
if WeiCk(Bt5) ge 0 then print "The code B_t^5 has constant weight ",WeiCk(Bt5);else print "The code B_t^5 is not a constant weight code";end if;
