//-------------------Verification Construction IV.1 for D=2,w=3----------------------------------
D:=2;
w:=3;
t:=3;//You can set different t to verify
//------------------------------------------for Bt4-----------------------------------------------
CsBt4:=function(t);
Y:={};
for y0,y1 in [0..t] do 
     if y0+y1 eq t then Y join:={[y0,y1]};end if;
end for;

Bt4:={};
for y in Y do 
     B3:=CsB3(y[1]);
     for ys in B3 do 
          x:=[0,0,0,0];
          x[1]:=ys[1];
          x[2]:=ys[2];
          x[3]:=ys[3];
          x[4]:=y[2]*D;
          Bt4 join:={x};
     end for;
end for;
return Bt4;
end function;

// check the minimum distance of Bt4 
MAX:=function(S);
ymax:=0;
for y in S do 
    if y ge ymax then ymax:=y;end if;
end for;
return ymax;
end function;

DisCk:=function(A);
ck:=1;
for x,y in A do 
     if x ne y then 
        Ds:={};
         for i in [1..4] do 
              Ds join:={Abs(x[i]-y[i])};
         end for;
        if MAX(Ds) le 1 then ck:=0;print x,y;break;end if;
     end if;
end for;
return ck;
end function;

Bt4:=CsBt4(t);
if DisCk(Bt4) eq 1 then print "The code Bt4 has minimum distance >=2.";end if;


// check the size of Bt4
Bt4size:=0;
if t mod 3 eq 0 then 
    Bt4size:=Binomial(t+2,3)+(Binomial(t+3,3)+2*(t+3)/3)/3+2;
end if;
if t mod 3 eq 1 then 
    Bt4size:=Binomial(t+2,3)+(Binomial(t+3,3)+2*(t+2)/3)/3+2;
end if;
if t mod 3 eq 2 then 
    Bt4size:=Binomial(t+2,3)+(Binomial(t+3,3)+2*(t+1)/3)/3+2;
end if;
if Bt4size eq #Bt4 then print "the results about the size in Theorem III.1 are correct.";end if;

//check constant weight
W:={};
for y in Bt4 do 
     ys:=0;
     for i in [1..4] do 
          ys:=ys+y[i];
     end for;
    W join:={ys};
end for;
if #W eq 1 then print "Bt4 has constant weight 2t=",Random(W);end if;


//-------------------Verification Construction IV.2 for D=2,w=4----------------------------------
D:=2;
w:=4;
t:=3;//You can set different t to verify
//------------------------------------------for Bt5--------------------------------------------------
C2:=function(t);
C2s:={};
for x0,x1 in [0..t] do 
    if x0+x1 eq t then C2s join:={[x0,x1]};end if;
end for;
return C2s;
end function;

CsBt5:=function(t);
Y:={};
for y0,y1 in [0..t] do 
     if y0+y1 eq t then Y join:={[y0,y1]};end if;
end for;

Bt5:={};
for y in Y do 
     B3:=CsB3(y[1]);
     C2s:=C2(y[2]);
     for g1 in B3 do 
          for g2 in C2s do 
               x:=[0,0,0,0,0];
               x[1]:=g1[1];
               x[2]:=g1[2];
               x[3]:=g1[3];
               x[4]:=g2[1]*D;
               x[5]:=g2[2]*D;
               Bt5 join:={x};
         end for;
     end for;
end for;
return Bt5;
end function;

// check the minimum distance of Bt5 
MAX:=function(S);
ymax:=0;
for y in S do 
    if y ge ymax then ymax:=y;end if;
end for;
return ymax;
end function;

DisCk:=function(A);
ck:=1;
for x,y in A do 
     if x ne y then 
        Ds:={};
         for i in [1..5] do 
              Ds join:={Abs(x[i]-y[i])};
         end for;
        if MAX(Ds) le 1 then ck:=0;print x,y;break;end if;
     end if;
end for;
return ck;
end function;

Bt5:=CsBt5(t);
if DisCk(Bt5) eq 1 then print "The code Bt5 has minimum distance >=2.";end if;


// check the size of Bt5
Bt5size:=0;
if t mod 3 eq 0 then 
     Bt5size:=Bt5size+Binomial(t+w-1,w)+(Binomial(w+t,w)-Binomial(w+t-3,t))/3;
     for i in [0..t] do 
          if i mod 3 eq 0 then 
             Bt5size:=Bt5size+2*Binomial(w-6+i,i-3)/3;
          end if;
     end for;
     for i in {t-2,t-1,t} do 
         Bt5size:=Bt5size+Binomial(w+i-3,i);
     end for;
end if;

if t mod 3 eq 1 then 
     Bt5size:=Bt5size+Binomial(t+w-1,w)+(Binomial(w+t,w)-Binomial(w+t-3,t))/3;
     for i in [0..t] do 
          if i mod 3 eq 0 then 
             Bt5size:=Bt5size+2*Binomial(w-5+i,i-2)/3;
          end if;
     end for;
     for i in {t-2,t-1,t} do 
         Bt5size:=Bt5size+Binomial(w+i-3,i);
     end for;
end if;

if t mod 3 eq 2 then 
     Bt5size:=Bt5size+Binomial(t+w-1,w)+(Binomial(w+t,w)-Binomial(w+t-3,t))/3;
     for i in [0..t] do 
          if i mod 3 eq 0 then 
             Bt5size:=Bt5size+2*Binomial(w-4+i,i-1)/3;
          end if;
     end for;
     for i in {t-2,t-1,t} do 
         Bt5size:=Bt5size+Binomial(w+i-3,i);
     end for;
end if;


if Bt5size eq #Bt5 then print "the results about the size in Theorem III.1 are correct.";end if;


//check constant weight
W:={};
for y in Bt5 do 
     ys:=0;
     for i in [1..5] do 
          ys:=ys+y[i];
     end for;
    W join:={ys};
end for;
if #W eq 1 then print "Bt5 has constant weight 2t=",Random(W);end if;
